---
title: "68 exon expression"
author: Steven Roberts
date: "`r format(Sys.time(), '%d %B, %Y')`" 
output: 
  html_document:
    theme: readable
    highlight: zenburn
    toc: true
    toc_float: true
    number_sections: true
    code_folding: show
    code_download: true
  # github_document:
  #   toc: true
  #   toc_depth: 3
  #   number_sections: true
  #   html_preview: true
---

```{r}
library(BiocManager)
BiocManager::install("WGCNA")
```


```{r setup, include=FALSE}
#library(kableExtra)
# library(DESeq2)
# library(pheatmap)
# library(RColorBrewer)
# library(data.table)
#library(DT)
# library(Biostrings)
#library(methylKit)
library(WGCNA)
library(data.table) # for data manipulation
library(tidyverse)

knitr::opts_chunk$set(
  echo = TRUE,         # Display code chunks
  eval = TRUE,         # Evaluate code chunks
  warning = TRUE,     # Hide warnings
  message = TRUE,     # Hide messages
  fig.width = 6,       # Set plot width in inches
  fig.height = 4,      # Set plot height in inches
  fig.align = "center" # Align plots to the center
)
```

```{r}
datExpr <- fread("../output/68-female-exon-fold/logfc.txt")

```

```{r}
rownames(datExpr) <- datExpr$GeneID
datExpr <- datExpr[ , -1, with = FALSE]

```


```{r}
sampleTree = hclust(dist(datExpr), method = "average")
plot(sampleTree, main = "Sample clustering to detect outliers", sub = "", xlab = "", cex.lab = 1.5, cex.axis = 1.5, cex.main = 2)

```
```{r}
powers = c(1:10)
sft = pickSoftThreshold(datExpr, powerVector = powers, verbose = 5)
plot(sft$fitIndices[,1], -log(sft$fitIndices[,3]), pch = 19, xlab="Soft Threshold (power)", ylab="-log10 scale free topology model fit", type="n")
text(sft$fitIndices[,1], -log(sft$fitIndices[,3]), labels=powers, cex=0.5)
abline(h = -log(0.9), col = "red")

```
```{r}
softPower = 6 # example value, adjust based on your plot
adjacency = adjacency(datExpr, power = softPower)
TOM = TOMsimilarity(adjacency)
dissTOM = 1-TOM
geneTree = hclust(as.dist(dissTOM), method = "average")
dynamicMods = cutreeDynamic(dendro = geneTree, distM = dissTOM, deepSplit = 2, pamRespectsDendro = FALSE)
table(dynamicMods)

```
```{r}
# Assuming 'dynamicMods' is your vector of module assignments from cutreeDynamic
moduleLabels = dynamicMods

```


```{r}
genesInBlueModule = names(moduleLabels[moduleLabels == "blue"])

```


```{r}
datExprBlueModule = datExpr[genesInBlueModule, ]

```

